<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JS学习_Day1</title>
    <url>/2022/12/26/JS%E5%AD%A6%E4%B9%A0-Day1/</url>
    <content><![CDATA[<h1 id="一、JavaScript是什么？"><a href="#一、JavaScript是什么？" class="headerlink" title="一、JavaScript是什么？"></a>一、JavaScript是什么？</h1><p>JS是一种脚本语言，可插入html的编程代码。需要html、css等前置知识</p>
<h1 id="二、入门"><a href="#二、入门" class="headerlink" title="二、入门"></a>二、入门</h1><h2 id="1-用法"><a href="#1-用法" class="headerlink" title="1.用法"></a>1.用法</h2><p>HTML 中的 Javascript 脚本代码必须位于$&lt;$script$&gt;$与$&lt;$&#x2F;script$&gt;$标签之间。<br>Javascript 脚本代码可被放置在 HTML 页面的$&lt;$body$&gt;$和$&lt;$head$&gt;$部分中</p>
<ul>
<li>示例：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;h1&gt;这是一个标题&lt;/h1&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;p&gt;这是一个段落&lt;/p&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
在一般情况下是把函数放入$&lt;$head$&gt;$部分中，或者放在页面底部。这样就可以把它们安置到同一处位置，不会干扰页面的内容。<br>例如：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;我的第一个 JavaScript 函数&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>尝试一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//下面为放在页面底部</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>尝试一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;我的第一个 JavaScript 函数&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
除此之外。也可以引用外部的js文件</li>
<li>示例：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;myScript.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<code>值得注意的是外部脚本即js文件，是不需要加&lt;script&gt;标签的</code></li>
</ul>
<h2 id="2-输出"><a href="#2-输出" class="headerlink" title="2.输出"></a>2.输出</h2><p>JavaScript 可以通过不同的方式来输出数据：</p>
<ul>
<li>使用 window.alert() 弹出警告框。</li>
<li>使用 document.write() 方法将内容写到 HTML 文档中。</li>
<li>使用 innerHTML 写入到 HTML 元素。</li>
<li>使用 console.log() 写入到浏览器的控制台。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//弹框</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>中国科学技术大学<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>大数据学院<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="number">5</span> + <span class="number">6</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//操作html元素</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>狗都不学<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>ics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;量子物理&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">/*</span><br><span class="line">以上 JavaScript 语句（在 <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"> 标签中）可以在 web 浏览器中执行：</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">document.getElementById(&quot;demo&quot;) 是使用 id 属性来查找 HTML 元素的 JavaScript 代码 。</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">innerHTML = &quot;量子物理。&quot; 是用于修改元素的 HTML 内容(innerHTML)的 JavaScript 代码</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">*/</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//写到 HTML 文档</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>中国科学技术大学<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">p</span>&gt;</span>大数据学院<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="language-handlebars"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;量子物理狗都不学&quot;</span>);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="language-handlebars"></span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">/*	</span><br><span class="line">请使用 document.write() 仅仅向文档输出写内容。</span><br><span class="line">如果在文档已完成加载后执行 document.write，整个 HTML 页面将被覆盖。</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//输出到控制台</span><br><span class="line"></span><br><span class="line">console.log() //浏览器按F12即可查看输出内容</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="3-语法"><a href="#3-语法" class="headerlink" title="3.语法"></a>3.语法</h2><ul>
<li>数据类型<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> length = <span class="number">16</span>;                                  <span class="comment">// Number 通过数字字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> points = x * <span class="number">10</span>;                              <span class="comment">// Number 通过表达式字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">&quot;Johnson&quot;</span>;                         <span class="comment">// String 通过字符串字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> cars = [<span class="string">&quot;Saab&quot;</span>, <span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>];              <span class="comment">// Array  通过数组字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">firstName</span>:<span class="string">&quot;John&quot;</span>, <span class="attr">lastName</span>:<span class="string">&quot;Doe&quot;</span>&#125;;  <span class="comment">// Object 通过对象字面量赋值</span></span><br></pre></td></tr></table></figure></li>
<li>关键字<br><img src="https://img-blog.csdnimg.cn/e2f01722e6cc41148544c11d186befe1.png" alt="在这里插入图片描述"></li>
<li>变量声明<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pi=<span class="number">3.14</span>;  </span><br><span class="line"><span class="comment">// 如果你熟悉 ES6，pi 可以使用 const 关键字，表示一个常量</span></span><br><span class="line"><span class="comment">// const pi = 3.14;</span></span><br><span class="line"><span class="keyword">var</span> person=<span class="string">&quot;John Doe&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> answer=<span class="string">&#x27;Yes I am!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一条语句多个赋值</span></span><br><span class="line"><span class="keyword">var</span> lastname=<span class="string">&quot;Doe&quot;</span>, age=<span class="number">30</span>, job=<span class="string">&quot;carpenter&quot;</span>;‘</span><br><span class="line"><span class="comment">//但不能同时给多个变量赋相同的值</span></span><br><span class="line"><span class="keyword">var</span> x,y,z=<span class="number">1</span>; <span class="comment">//x，y为undefined，z=1</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="4-注释"><a href="#4-注释" class="headerlink" title="4.注释"></a>4.注释</h2><p>JS中的注释方式有几种，跟C语言基本一致<br>1.单行注释：&#x2F;&#x2F;<br>2.多行注释：&#x2F;* *&#x2F;<br><code>html中的注释为&lt;!--  abc  --&gt;   abc为被注释内容</code></p>
<h2 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5.数据类型"></a>5.数据类型</h2><p>**值类型(基本类型)**：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）、Symbol。</p>
<p><strong>引用数据类型（对象类型）</strong>：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。</p>
<ul>
<li><p>JavaScript 拥有动态类型</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x;               <span class="comment">// x 为 undefined</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">5</span>;           <span class="comment">// 现在 x 为数字</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;John&quot;</span>;      <span class="comment">// 现在 x 为字符串</span></span><br><span class="line"><span class="comment">//变量的数据类型可以使用 typeof 操作符来查看：</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">&quot;John&quot;</span>                <span class="comment">// 返回 string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span>                  <span class="comment">// 返回 number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span>                 <span class="comment">// 返回 boolean</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]             <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">name</span>:<span class="string">&#x27;John&#x27;</span>, <span class="attr">age</span>:<span class="number">34</span>&#125; <span class="comment">// 返回 object</span></span><br></pre></td></tr></table></figure></li>
<li><p>字符串</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> carname=<span class="string">&quot;Volvo XC60&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> carname=<span class="string">&#x27;Volvo XC60&#x27;</span>;  <span class="comment">// 单引号双引号皆可</span></span><br><span class="line"><span class="comment">//只要不匹配包围字符串的引号即可：</span></span><br><span class="line"><span class="keyword">var</span> answer=<span class="string">&quot;It&#x27;s alright&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> answer=<span class="string">&quot;He is called &#x27;Johnny&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> answer=<span class="string">&#x27;He is called &quot;Johnny&quot;&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>字符串属性：<br><img src="https://img-blog.csdnimg.cn/72ffba29be764402a14e75683b1e1b92.png" alt="在这里插入图片描述"><br>字符串方法：<br><img src="https://img-blog.csdnimg.cn/5debd588de1c4f7894950a90aee17a99.png" alt="在这里插入图片描述"></p>
</li>
<li><p>bool值<br>布尔（逻辑）只能有两个值：true 或 false。</p>
</li>
<li><p>数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cars=<span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">cars[<span class="number">0</span>]=<span class="string">&quot;Saab&quot;</span>;</span><br><span class="line">cars[<span class="number">1</span>]=<span class="string">&quot;Volvo&quot;</span>;</span><br><span class="line">cars[<span class="number">2</span>]=<span class="string">&quot;BMW&quot;</span>;</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="keyword">var</span> cars=[<span class="string">&quot;Saab&quot;</span>,<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>];</span><br></pre></td></tr></table></figure></li>
<li><p>对象<br>对象（类似于python中的字典）由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> person=&#123;<span class="attr">firstname</span>:<span class="string">&quot;yi&quot;</span>, <span class="attr">lastname</span>:<span class="string">&quot;zhan&quot;</span>, <span class="attr">id</span>:<span class="number">4.3</span>&#125;;</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="keyword">var</span> person=&#123;</span><br><span class="line">firstname : <span class="string">&quot;yi&quot;</span>,</span><br><span class="line">lastname  : <span class="string">&quot;zhan&quot;</span>,</span><br><span class="line">id        :  <span class="number">4.3</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>对象属性有两种寻址方式：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">name=person.<span class="property">lastname</span>;</span><br><span class="line">name=person[<span class="string">&quot;lastname&quot;</span>];</span><br></pre></td></tr></table></figure>
<p>对象中也可以定义函数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>www.ustc.edu.cn<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>创建和使用对象方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>对象方法作为一个函数定义存储在对象属性中。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">firstName</span>: <span class="string">&quot;yi&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    lastName : <span class="string">&quot;zhan&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    id : <span class="number">4.3</span>,</span></span><br><span class="line"><span class="language-javascript">    fullName : <span class="keyword">function</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="language-javascript">	&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&quot; &quot;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = person.<span class="title function_">fullName</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>Undefined 和 Null<br>Undefined 这个值表示变量不含有值。可以通过将变量的值设置为 null 来清空变量。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cars=<span class="literal">null</span>;</span><br><span class="line">person=<span class="literal">null</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>声明变量类型</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> carname=<span class="keyword">new</span> <span class="title class_">String</span>;</span><br><span class="line"><span class="keyword">var</span> x=      <span class="keyword">new</span> <span class="title class_">Number</span>;</span><br><span class="line"><span class="keyword">var</span> y=      <span class="keyword">new</span> <span class="title class_">Boolean</span>;</span><br><span class="line"><span class="keyword">var</span> cars=   <span class="keyword">new</span> <span class="title class_">Array</span>;</span><br><span class="line"><span class="keyword">var</span> person= <span class="keyword">new</span> <span class="title class_">Object</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="6-函数"><a href="#6-函数" class="headerlink" title="6.函数"></a>6.函数</h2><ul>
<li>定义一个函数<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">functionname</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 执行代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
其他用法与C&amp;python基本一致，这里不详细说明了</li>
</ul>
<hr>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>今天主要学习了JS的基本语法，算是入了一个门，在有其他语言的基础上，学起来并不困难</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS学习_Day2</title>
    <url>/2022/12/26/JS%E5%AD%A6%E4%B9%A0-Day2/</url>
    <content><![CDATA[<h2 id="1-事件"><a href="#1-事件" class="headerlink" title="1.事件"></a>1.事件</h2><p>HTML 事件是发生在 HTML 元素上的事情，当在 HTML 页面中使用 JavaScript 时， JavaScript 可以触发这些事件。</p>
<ul>
<li>常见的html事件：<img src="https://img-blog.csdnimg.cn/0eec0288cdf9495ba18681a5464e8824.png"><br>示例：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;this.innerHTML=4.3&quot;</span>&gt;</span>你的GPA是?<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="2-比较运算符"><a href="#2-比较运算符" class="headerlink" title="2.比较运算符"></a>2.比较运算符</h2><p><img src="https://img-blog.csdnimg.cn/48e214d452f04ca28008e7db836c9690.png" alt="在这里插入图片描述"></p>
<h2 id="3-循环语句"><a href="#3-循环语句" class="headerlink" title="3.循环语句"></a>3.循环语句</h2><p>与C并无区别，略</p>
<h2 id="4-正则表达式"><a href="#4-正则表达式" class="headerlink" title="4.正则表达式"></a>4.正则表达式</h2><p>正则表达式是由一个字符序列形成的搜索模式。搜索模式可用于文本搜索和文本替换。<br>在 JavaScript 中，正则表达式通常用于两个字符串方法 : search() 和 replace()：</p>
<ul>
<li>search() 方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。</li>
<li>replace() 方法用于在字符串中用一些字符串替换另一些字符串，或替换一个与正则表达式匹配的子串</li>
</ul>
<p>search():</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索字符串 &quot;lzwl&quot;, 并显示匹配的起始位置：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> str = <span class="string">&quot;lzwl 狗都不学!&quot;</span>; </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> n = str.<span class="title function_">search</span>(<span class="regexp">/lzwl/i</span>); <span class="comment">//i表示不区分大小写</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = n;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">//输出结果为0</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>search 方法可使用字符串作为参数。字符串参数会转换为正则表达式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索字符串 &quot;lzwl&quot;, 并显示匹配的起始位置：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> str = <span class="string">&quot;lzwl goudoubuxue!&quot;</span>; </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> n = str.<span class="title function_">search</span>(<span class="string">&quot;lzwl&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = n;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>replace():</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>替换 &quot;ics&quot; 为 &quot;lzwl&quot; :<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>ics goudoubuxue!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> str = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>; </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> txt = str.<span class="title function_">replace</span>(<span class="regexp">/ics/i</span>,<span class="string">&quot;lzwl&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = txt;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>也可直接将字符串最为参数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> txt = str.<span class="title function_">replace</span>(<span class="string">&quot;ics&quot;</span>,<span class="string">&quot;lzwl&quot;</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>正则表达式的修饰符:</li>
</ul>
<table>
<thead>
<tr>
<th>修饰符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>i</td>
<td>不区分大小写</td>
</tr>
<tr>
<td>g</td>
<td>执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td>
</tr>
<tr>
<td>m</td>
<td>执行多行匹配。</td>
</tr>
</tbody></table>
<ul>
<li>正则表达式模式</li>
</ul>
<table>
<thead>
<tr>
<th>元字符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>\d</td>
<td>查找数字。</td>
</tr>
<tr>
<td>\s</td>
<td>查找空白字符。</td>
</tr>
<tr>
<td>\b</td>
<td>匹配单词边界。</td>
</tr>
<tr>
<td>\uxxx</td>
<td>查找以十六进制数 xxxx 规定的 Unicode 字符。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>表达式</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>[abc]</td>
<td>查找方括号之间的任何字符</td>
</tr>
<tr>
<td>[0-9]</td>
<td>查找任何从 0 至 9 的数字。</td>
</tr>
<tr>
<td>(x|y)</td>
<td>查找任何以 | 分隔的选项。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>量词</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>n+</td>
<td>匹配任何包含至少一个 n 的字符串</td>
</tr>
<tr>
<td>n*</td>
<td>匹配任何包含零个或多个 n 的字符串。</td>
</tr>
<tr>
<td>n?</td>
<td>匹配任何包含零个或一个 n 的字符串。</td>
</tr>
</tbody></table>
<ul>
<li>RegExp 对象<br>test():<br>test() 方法用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> patt1=<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;4.3&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(patt1.<span class="title function_">test</span>(<span class="string">&quot;your gpa is 4.3&quot;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>exec():<br>exec() 方法用于检索字符串中的正则表达式的匹配。<br>该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> patt1=<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;es&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(patt1.<span class="title function_">exec</span>(<span class="string">&quot;The best things in life are free&quot;</span>));</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//结果输出为es</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="5-错误"><a href="#5-错误" class="headerlink" title="5.错误"></a>5.错误</h2><ul>
<li>try 语句测试代码块的错误。</li>
<li>catch 语句处理错误。</li>
<li>throw 语句创建自定义错误。</li>
<li>finally 语句在 try 和 catch 语句之后，无论是否有触发异常，该语句都会执行。</li>
<li>throw 语句允许我们创建自定义错误。<br>例：</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>不管输入是否正确，输入框都会再输入后清空。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>请输入 5 ~ 10 之间的数字：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> message, x;</span></span><br><span class="line"><span class="language-javascript">  message = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p01&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  message.<span class="property">innerHTML</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  x = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">try</span> &#123; </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(x == <span class="string">&quot;&quot;</span>) <span class="keyword">throw</span> <span class="string">&quot;值是空的&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(<span class="built_in">isNaN</span>(x)) <span class="keyword">throw</span> <span class="string">&quot;值不是一个数字&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    x = <span class="title class_">Number</span>(x);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(x &gt; <span class="number">10</span>) <span class="keyword">throw</span> <span class="string">&quot;太大&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(x &lt; <span class="number">5</span>) <span class="keyword">throw</span> <span class="string">&quot;太小&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">catch</span>(err) &#123;</span></span><br><span class="line"><span class="language-javascript">    message.<span class="property">innerHTML</span> = <span class="string">&quot;错误: &quot;</span> + err + <span class="string">&quot;.&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">finally</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 这个程序只允许你上输入5-10之间的数字，若小于五则会输出太小，大于十则输出太大</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>JS的基本用法到此就学习完了，后面会继续学习一些进阶用法
 </p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS学习_Day3</title>
    <url>/2022/12/26/JS%E5%AD%A6%E4%B9%A0-Day3/</url>
    <content><![CDATA[<h2 id="1-函数"><a href="#1-函数" class="headerlink" title="1.函数"></a>1.函数</h2><p>在之前已经初步了解了JS中一般函数是如何使用的，与C语言并无太大的区别。<br>示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a * b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>有所不同的是，JS中是可以用一个表达式来表示一个函数的，函数表达式可以存储在变量中：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="keyword">function</span> (<span class="params">a, b</span>) &#123;<span class="keyword">return</span> a * b&#125;;</span><br><span class="line"><span class="keyword">var</span> z = <span class="title function_">x</span>(<span class="number">4</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>自调用函数<br>如果表达式后面紧跟 () ，则会自动调用。<br>示例：</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>函数可以自动调用：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;Hello! 你的GPA是4.3&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;)();</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 此处函数会自动调用。即在id=demo处自动写上Hello! 你的GPA是4.3</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>箭头函数<br>ES6 新增了箭头函数。箭头函数表达式的语法比普通函数表达式更简洁。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 普通函数</span></span><br><span class="line"><span class="keyword">let</span> sum = <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 箭头函数</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">sum1</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由此得到箭头函数的一般形式：(参数) &#x3D;&gt; { 函数体 }<br>其他的一些箭头函数用法：<br>1.在参数只有一个的时候是可以省略小括号的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 有效</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">function</span> = (<span class="params">x</span>) =&gt; &#123;</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 有效</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">function</span> = x =&gt; &#123;</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 没有参数需要括号</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">function</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 有多个参数需要括号</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">function</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">	<span class="keyword">return</span> a * b;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>2.在箭头函数只有一行代码时可以省略大括号，并且会自动return这条语句的返回值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 有效</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">function</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 等效于 </span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">function</span> = (<span class="params">a, b</span>) =&gt; a + b; <span class="comment">// 相当于 return a + b;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//但这种写法是错误的</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">function</span> = (<span class="params">a, b</span>) =&gt; <span class="keyword">return</span> a + b;</span><br></pre></td></tr></table></figure>
<ul>
<li>函数参数<br>JavaScript 函数对参数的值没有进行任何的检查。若函数有两个参数，而传参时只传入了一个参数，另一个参数会自动设为undefined。ES6 支持函数带有默认参数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params">x, y = <span class="number">10</span></span>) &#123;</span><br><span class="line">    <span class="comment">// y is 10 if not passed or undefined</span></span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="title function_">myFunction</span>(<span class="number">0</span>, <span class="number">2</span>) <span class="comment">// 输出 2</span></span><br><span class="line"><span class="title function_">myFunction</span>(<span class="number">5</span>); <span class="comment">// 输出 15, y 参数的默认值</span></span><br></pre></td></tr></table></figure>
<ul>
<li>arguments 对象<br>JavaScript 函数有个内置的对象 arguments 对象。argument 对象包含了函数调用的参数数组。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//arguments.length 返回传入参数的个数</span></span><br><span class="line"><span class="comment">// 找到传入参数的最大值</span></span><br><span class="line">x = <span class="title function_">findMax</span>(<span class="number">1</span>, <span class="number">123</span>, <span class="number">500</span>, <span class="number">115</span>, <span class="number">44</span>, <span class="number">88</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findMax</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> i, max = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">arguments</span>.<span class="property">length</span> &lt; <span class="number">2</span>) <span class="keyword">return</span> max;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">arguments</span>[i] &gt; max) &#123;</span><br><span class="line">            max = <span class="variable language_">arguments</span>[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-类"><a href="#2-类" class="headerlink" title="2.类"></a>2.类</h2><p>我们使用 class 关键字来创建一个类，类体在一对大括号 {} 中，我们可以在大括号 {} 中定义类成员的位置，如方法或构造函数。<br>每个类中包含了一个特殊的方法 constructor()，它是类的构造函数，这种方法用于创建和初始化一个由 class 创建的对象。<br>创建一个类的语法格式如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//格式</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ClassName</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123; ... &#125; <span class="comment">//和python中__init__()类似</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name, url</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">url</span> = url;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>类的方法</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GPA</span>&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name, grade</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">grade</span>= grade;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">age</span>(<span class="params"></span>) &#123;</span><br><span class="line">  	<span class="keyword">let</span> gpa</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">grade</span>&gt;<span class="number">95</span>) gpa = <span class="number">4.3</span></span><br><span class="line">    <span class="keyword">else</span> gpa = <span class="number">4.</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> gpa</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> gpa= <span class="keyword">new</span> <span class="title function_">GPA</span>(<span class="string">&quot;占一&quot;</span>, <span class="number">99</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> =</span><br><span class="line"><span class="string">&quot;占一的GPA: &quot;</span> + gpa.<span class="title function_">age</span>() ;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>类的继承</strong><br>JavaScript 类继承使用 extends 关键字。继承允许我们依据另一个类来定义一个类，这使得创建和维护一个应用程序变得更容易。当创建一个类时，您不需要重新编写新的数据成员和成员函数，只需指定新建的类继承了一个已有的类的成员即可。这个已有的类称为基类（父类），新建的类称为派生类（子类）。super() 方法用于调用父类的构造函数<br>示例：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">father</span>&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">grade</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">grade</span> = grade;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">GET_GPA</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> gpa</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">grade</span>&gt;<span class="number">90</span>) gpa=<span class="number">4.3</span></span><br><span class="line">    <span class="keyword">else</span> gpa=<span class="number">4.0</span></span><br><span class="line">    <span class="keyword">return</span> gpa</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">child</span> <span class="keyword">extends</span> <span class="title class_ inherited__">father</span>&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name, grade</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(grade);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span>= name;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&#x27;的GPA:&#x27;</span>+<span class="variable language_">this</span>.<span class="title function_">GET_GPA</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> noob = <span class="keyword">new</span> child (<span class="string">&quot;占一&quot;</span>, <span class="number">99</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = noob.<span class="title function_">show</span>();</span><br><span class="line"><span class="comment">//输出结果  占一的GPA：4.3</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>getter 和 setter</strong><br>类中我们可以使用 getter 和 setter 来获取和设置值。类中添加 getter 和 setter 使用的是 get 和 set 关键字。很多开发者在属性名称前使用下划线字符 _ 将 getter&#x2F;setter 与实际属性分开,<br>实例：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GPA</span>&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">grade</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_sitegrade</span> = grade;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">sitegpa</span>() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_sitegrade</span> ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">set</span> <span class="title function_">sitegpa</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_sitegrade</span> = x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> noob = <span class="keyword">new</span> <span class="title function_">GPA</span>(<span class="number">4.3</span>);</span><br><span class="line"> </span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = noob.<span class="property">sitegpa</span>;</span><br><span class="line">noob.<span class="property">sitegpa</span>=<span class="number">4.31</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = noob.<span class="property">sitegpa</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>静态方法</strong><br>静态方法是使用 static 关键字修饰的方法，又叫类方法，属于类的，但不属于对象。静态方法不能在对象上调用，只能在类中调用。<br>示例：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GPA</span>&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">grade</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">grade</span>= grade;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">good</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">4.3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> zhanyi = <span class="keyword">new</span> <span class="title function_">GPA</span>(<span class="number">99</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 可以在类中调用 &#x27;good()&#x27; 方法</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="variable constant_">GPA</span>.<span class="title function_">good</span>();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 不能通过实例化后的对象调用静态方法</span></span><br><span class="line"><span class="comment">// document.getElementById(&quot;demo&quot;).innerHTML = zhanyi.good();</span></span><br><span class="line"><span class="comment">// 以上代码会报错</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS学习_Day4</title>
    <url>/2022/12/26/JS%E5%AD%A6%E4%B9%A0-Day4/</url>
    <content><![CDATA[<h2 id="1-DOM"><a href="#1-DOM" class="headerlink" title="1.DOM"></a>1.DOM</h2><p>Document Object Model（文档对象模型）简称DOM<br>通过 JavaScript，操作 HTML 元素有三种方法：</p>
<ul>
<li>通过 id 找到 HTML 元素</li>
<li>通过标签名找到 HTML 元素</li>
<li>通过类名找到 HTML 元素</li>
</ul>
<p>在之前的学习中，我们已经使用过这些方法了</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;intro&quot;</span>); <span class="comment">//查找 id=&quot;intro&quot; 元素</span></span><br><span class="line"><span class="comment">//本例查找 id=&quot;lzwl&quot; 的元素，然后查找 id=&quot;lzwl&quot; 元素中的所有 &lt;p&gt; 元素</span></span><br><span class="line"><span class="keyword">var</span> x=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lzwl&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> y=x.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;p&quot;</span>);</span><br><span class="line"><span class="comment">//查找 class=&quot;intro&quot; 的元素</span></span><br><span class="line"><span class="keyword">var</span> x=<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;intro&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>之前的学习中我们见过了<strong>document.write（）和document.getElementById(id).innerHTML</strong>两种函数，可以分别改变 HTML 输出流和改变 HTML 内容。而改变 HTML 属性则需用到<strong>document.getElementById(id).attribute</strong><br>实例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;lzwl.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;160&quot;</span> <span class="attr">height</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;image&quot;</span>).<span class="property">src</span>=<span class="string">&quot;ics.jpg&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>将量子物理的图标改为ics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>要修改 HTML 样式则需要用到<strong>document.getElementById(id).style.property</strong><br>实例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>lzwl nmsl!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>lzwl nmsl!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p2&quot;</span>).<span class="property">style</span>.<span class="property">color</span>=<span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p2&quot;</span>).<span class="property">style</span>.<span class="property">fontSize</span>=<span class="string">&quot;larger&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>以上段落通过脚本修改。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>DOM事件</li>
</ul>
<p>HTML 事件的例子：</p>
<ul>
<li>当用户点击鼠标时</li>
<li>当网页已加载时</li>
<li>当图像已加载时</li>
<li>当鼠标移动到元素上时</li>
<li>当输入字段被改变时</li>
<li>当提交 HTML 表单时</li>
<li>当用户触发按键时</li>
</ul>
<p>实例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//onclick就不介绍了，之前已经接触了很多次</span></span><br><span class="line"><span class="comment">//onchange 事件常结合对输入字段的验证来使用。当用户离开输入框后，执行函数</span></span><br><span class="line"><span class="comment">//onmouseover 和 onmouseout 事件可用于在用户的鼠标移至 HTML 元素上方或移出元素时触发函数。</span></span><br><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onmouseover</span>=<span class="string">&quot;mOver(this)&quot;</span> <span class="attr">onmouseout</span>=<span class="string">&quot;mOut(this)&quot;</span>&gt;</span>Mouse Over Me<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">function</span> <span class="title function_">mOver</span>(<span class="params">obj</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	obj.<span class="property">innerHTML</span>=<span class="string">&quot;lzwl&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">function</span> <span class="title function_">mOut</span>(<span class="params">obj</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	obj.<span class="property">innerHTML</span>=<span class="string">&quot;ics&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>向元素添加事件<br>addEventListener() 方法用于向指定元素添加事件句柄。addEventListener() 方法添加的事件句柄不会覆盖已存在的事件句柄，可以向一个元素添加多个事件句柄。<br><strong>element.addEventListener(event, function, useCapture);</strong><br>第一个参数是事件的类型 (如 “click” 或 “mousedown”).<br>第二个参数是事件触发后调用的函数。<br>第三个参数是个布尔值用于描述事件是冒泡还是捕获。该参数是可选的。<br>实例：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">element.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="title function_">alert</span>(<span class="string">&quot;Hello World!&quot;</span>); &#125;); <span class="comment">//当用户点击元素时弹出 &quot;Hello World!&quot; :</span></span><br></pre></td></tr></table></figure>
<ul>
<li>在文档中添加和移除元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ustc<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>lzwl<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>ics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> para = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;p&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> node = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;4.3&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">para.<span class="title function_">appendChild</span>(node);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;div1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">element.<span class="title function_">appendChild</span>(para);</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//以上的实例我们使用了 appendChild() 方法，它用于添加新元素到尾部。如果我们需要将新元素添加到开始位置，可以使用 insertBefore() 方法:</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">//</span><br></pre></td></tr></table></figure>
<ul>
<li>移除已存在的元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>ics<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>lzwl<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> parent = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;div1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> child = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">parent.<span class="title function_">removeChild</span>(child); <span class="comment">//ie浏览器不支持该方法</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>替换元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;div1&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>lzwl<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>4.3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> para = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;p&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> node = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;ics&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">para.<span class="title function_">appendChild</span>(node);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> parent = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;div1&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> child = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p1&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">parent.<span class="title function_">replaceChild</span>(para, child);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="2-BOM"><a href="#2-BOM" class="headerlink" title="2.BOM"></a>2.BOM</h2><p>Browser Object Model (浏览器对象模型)简称BOM，它使得JavaScript 有能力与浏览器”对话”。<br>都是一些常见的</p>
<p><strong>window对象的属性</strong>：</p>
<ul>
<li>consfirm：有返回值 ture&#x2F;false</li>
<li>alert:返回值是undefined</li>
<li>onscroll:滚动条滚动时触发</li>
<li>onresize：浏览器窗口改变时触发 。顶部悬浮 的可以用到</li>
<li>open():新打开一个页面，原来的页面还存在，此方法不太常用</li>
<li>close():关闭打开的页面，此方法不太常用</li>
<li>onload()：dom元素和资源加载完毕之后才执行</li>
</ul>
<p><strong>history</strong><br>history：保存了用户上网的历史记录。</p>
<ul>
<li>后退一页：history.go(-1) &#x2F; history.back()</li>
<li>前进一页：history.go(1) &#x2F;history.forward()</li>
<li>前进n页 history.go(n)  后退n页 history.go(-n)</li>
</ul>
<p>还有其他很多方法，使用起来都比较简单，就不一一列举了，需要使用时再去查找</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>搭建个人主页和个人博客</title>
    <url>/2022/12/25/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E5%92%8C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>疫情在家，生活过于无聊，为了给自己找点事干，于是就搭建了自己的个人主页和博客</p>
<h2 id="个人主页"><a href="#个人主页" class="headerlink" title="个人主页"></a>个人主页</h2><p>科大21级前入学的学生网络中心会免费发放300M的服务器，用于搭建个人主页，服务器的地址为<code>home.ustc.edu.cn/~科大邮箱名/</code></p>
<p>例如<code>http://home.ustc.edu.cn/~zy0119/</code></p>
<p>校内访问<a href="http://home.ustc.edu.cn/">home.ustc.edu.cn</a>会有一定的教程，例如推荐使用<strong>File Zilla</strong>用于上传文件到服务器，网页内给出了下载链接，下载客户端版本即可</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224150842948.png" alt="image-20221224150842948"></p>
<p>下载完成后，在主机名输入<code>home.ustc.edu.cn</code>，用户名即为科大邮箱名，密码为邮箱密码，即可连接上服务器</p>
<p>建立<code>public_html</code>，之后所有文件均放在该文件夹下</p>
<p>例如：</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224151223130.png" alt="image-20221224151223130"></p>
<p>关于<code>index.html</code>的编写，大家可以去网上找自己喜欢的样式，复制修改即可</p>
<h2 id="个人博客"><a href="#个人博客" class="headerlink" title="个人博客"></a>个人博客</h2><p>使用hexo+Github Page+PicGo+购买的域名搭建了自己的博客</p>
<h3 id="第一步-在Github创建仓库"><a href="#第一步-在Github创建仓库" class="headerlink" title="第一步 在Github创建仓库"></a>第一步 在Github创建仓库</h3><p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224151629383.png" alt="image-20221224151629383"></p>
<p>注意，这里的仓库名字一定要是<code>你Github的名字.github.io</code>，问就是我之前没这么弄就失败了</p>
<p>进入仓库后点击<code>Setting</code>再点击<code>Pages</code>，将<code>None</code>换成<code>master</code>，再点击<code>Save</code>。Github将会自动替你创建出一个<code>pages</code>的页面。 如果配置没有问题，大约几分钟之后，<code>yourname.github.io</code>这个网址就可以正常访问了</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224152114233.png" alt="image-20221224152114233"></p>
<h3 id="第二步-hexo的安装"><a href="#第二步-hexo的安装" class="headerlink" title="第二步 hexo的安装"></a>第二步 hexo的安装</h3><p>这里默认大家电脑里有node.js了</p>
<ul>
<li>安装hexo</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo -v    //查看版本</span><br></pre></td></tr></table></figure>

<p>初始化一个文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init MyBlogs</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> MyBlogs //进入这个MyBlogs文件夹</span><br><span class="line">npm install  //安装依赖</span><br></pre></td></tr></table></figure>

<p>在该文件夹下，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p><code>hexo cl</code>为<code>hexo clean</code>，<code>hexo g</code>为<code>hexo generate</code>，<code>hexo s</code>为<code>hexo server</code>，上述操作可以在本地生成预览，默认是<code>localhost:4000</code></p>
<ul>
<li>配置</li>
</ul>
<p>在站点的配置文件<code>.config.yml</code>中修改depoly</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/USTChandsomeboy/USTChandsomeboy.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>安装deployer</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p><code>hexo d</code>为<code>hexo deploy</code></p>
<p>即可上传到你的仓库，这里默认大家的ssh是配置好的，<a href="https://username.github.io可以查看到你的helloworld博客了/">https://username.github.io可以查看到你的Helloworld博客了</a></p>
<h3 id="第三步-hexo博客的编写"><a href="#第三步-hexo博客的编写" class="headerlink" title="第三步 hexo博客的编写"></a>第三步 hexo博客的编写</h3><p>hexo的博客是用Markdown编写的，真的很友好，常用命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章&quot;</span></span><br><span class="line">hexo new post <span class="string">&quot;文章&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;页面&quot;</span></span><br></pre></td></tr></table></figure>

<p>创建一篇文章后，就会自动生成一个.md文件，上方有个头部，是系统配置的</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224154212092.png" alt="image-20221224154212092"></p>
<p>在下面按自己的习惯编写Markdown文件就行了</p>
<p>美化教程看这个链接就可以了<a href="http://t.csdn.cn/HpAjP">next主题优化</a>，需要先下载next的主题</p>
<h3 id="第四步-创建图床"><a href="#第四步-创建图床" class="headerlink" title="第四步 创建图床"></a>第四步 创建图床</h3><p>在Github中，创建一个仓库，选择public，随意命名，例如images</p>
<p>在个人设置中</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224154651246.png" alt="image-20221224154651246"></p>
<p>找到Developer settings</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224154732493.png" alt="image-20221224154732493"></p>
<p>然后生成token,记录好你的token</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224154837073.png" alt="image-20221224154837073"></p>
<p>然后下载<a href="https://github.com/Molunerfinn/picgo/releases">PicGo</a>，按图中设置，如果没有意外的话，就没有意外了，会自动上传到仓库中</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224154612472.png" alt="image-20221224154612472"></p>
<p>我们还可以在typora中配置自动上传，在设置中按如下配置即可：</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224155226616.png" alt="image-20221224155226616"></p>
<p>点击验证图片上传选项，若失败，则检查端口号是否相同，一般PicGo的端口号都是36677</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224155327164.png" alt="image-20221224155327164"></p>
<h3 id="第五步-购买域名"><a href="#第五步-购买域名" class="headerlink" title="第五步 购买域名"></a>第五步 购买域名</h3><p>在阿里云上购买自己的域名，买完后，点击解析，再点击添加记录</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224155554749.png" alt="image-20221224155554749"></p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224155647615.png" alt="image-20221224155647615"></p>
<p>最后，我们在我们博客的仓库的settings&#x2F;pages里面，输入自己的域名就全部完成了</p>
<p><img src="https://raw.githubusercontent.com/USTChandsomeboy/images/master/img/image-20221224155813810.png" alt="image-20221224155813810"></p>
<h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><p><a href="http://t.csdn.cn/KZUND">next主题优化</a><br><a href="http://t.csdn.cn/TPT6F">hexo基本配置</a></p>
<h3 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
</search>
